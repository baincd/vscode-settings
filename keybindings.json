[
// Redefine ctrl+d = "delete line" (replaces addSelectionToNextFindMatch, duplicates ctrl+shift+k)
{ "key": "ctrl+d",                "command": "editor.action.deleteLines",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+d",                "command": "-editor.action.addSelectionToNextFindMatch",
                                     "when": "editorFocus" },

// ctrl+shift+/ = "block comment" (duplicate ctrl+shift+a)
{ "key": "ctrl+shift+/",          "command": "editor.action.blockComment",
                                     "when": "editorTextFocus && !editorReadonly" },

// ctrl+] = "jump to bracket" (replaces indentLines, duplicates ctrl+shift+\)
{ "key": "ctrl+]",                "command": "editor.action.jumpToBracket",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+]",                "command": "-editor.action.indentLines",
                                     "when": "editorTextFocus && !editorReadonly" },

{ "key": "ctrl+shift+\\",           "command": "commands.custom.showActiveFileInExplorer" },

// Duplicate ctrl+k ctrl+f
{ "key": "ctrl+alt+f",            "command": "editor.action.formatSelection",
                                     "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },

// ctrl+shift+` = "switch active terminal" (replaces "new terminal")
{ "key": "ctrl+shift+`",          "command": "workbench.action.quickOpenTerm", 
                                     "when": "terminalProcessSupported" },
{ "key": "ctrl+shift+`",          "command": "-workbench.action.terminal.new",
                                     "when": "terminalProcessSupported" },

// Remove ctrl+w closing window when last editor is closed
{ "key": "ctrl+w",                "command": "-workbench.action.closeWindow",
                                     "when": "!editorIsOpen && !multipleEditorGroups" },

// ctrl+shift+w = "close all editors" (replaces "close window")
{ "key": "ctrl+shift+w",          "command": "workbench.action.closeAllEditors" },
{ "key": "ctrl+shift+w",          "command": "-workbench.action.closeWindow" },

// ctrl+shift+, = "settings on fire" (replaces inPlaceReplaceUp)
{ "key": "ctrl+shift+,",          "command": "settingsOnFire.toggleSettings" },
{ "key": "ctrl+shift+,",          "command": "-editor.action.inPlaceReplace.up",
                                     "when": "editorTextFocus && !editorReadonly" },

// ctrl+q on Linux duplicates Windows behavior
{ "key": "ctrl+q",                "command": "-workbench.action.quit" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenView" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenNavigateNextInViewPicker",
                                     "when": "inQuickOpen && inViewsPicker" },
{ "key": "ctrl+shift+q",          "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
                                     "when": "inQuickOpen && inViewsPicker" },

// alt+left/right on Linux duplicates Windows behavior
{ "key": "alt+left",              "command": "workbench.action.navigateBack" },
{ "key": "alt+left",              "command": "workbench.action.quickInputBack",
                                     "when": "inQuickOpen" },
{ "key": "alt+right",             "command": "workbench.action.navigateForward" },


// ctrl+; enter = maximize editor
{ "key": "ctrl+; enter",          "command": "workbench.action.minimizeOtherEditors" },

// Special versions of existing shortcuts
{ "key": "ctrl+; ctrl+shift+f",   "command": "search.action.openNewEditor" },
{ "key": "ctrl+k ctrl+shift+p",   "command": "workbench.action.showAllEditorsByMostRecentlyUsed" },
{ "key": "ctrl+; ctrl+q",         "command": "workbench.action.openView" },

// Change Language Mode shortcuts (require `usernamehw.commands`)
{ "key": "ctrl+; m",              "command": "commands.setEditorLanguage",
                                     "args": "markdown" },
{ "key": "ctrl+; j",              "command": "commands.setEditorLanguage",
                                     "args": "json" },
{ "key": "ctrl+; ctrl+shift+j",   "command": "commands.custom.format-json-doc" },
{ "key": "ctrl+; ctrl+[",         "command": "commands.custom.fold-doc" },

// Command Palettes
{ "key": "ctrl+alt+b",            "command": "baincd.mini-command-palettes.cmds.activity-bar-palette" },
{ "key": "ctrl+alt+j",            "command": "baincd.mini-command-palettes.cmds.panel-palette" },
{ "key": "ctrl+alt+;",            "command": "baincd.mini-command-palettes.cmds.dev-palette" },
{ "key": "ctrl+alt+'",            "command": "baincd.mini-command-palettes.cmds.dev-view-palette" },
{ "key": "ctrl+alt+/",            "command": "baincd.mini-command-palettes.cmds.diff-palette" },
{ "key": "ctrl+alt+g",            "command": "baincd.mini-command-palettes.cmds.git-palette" },
{ "key": "ctrl+alt+d",            "command": "workbench.action.debug.selectandstart" },
{ "key": "ctrl+alt+t",            "command": "workbench.action.tasks.runTask" },

// Shortcuts to support Secondary Side Bar (https://code.visualstudio.com/updates/v1_64#_new-side-panel and https://code.visualstudio.com/updates/v1_66#_new-names-for-side-panel-and-side-bar)
{ "key": "ctrl+f11",              "command": "workbench.action.toggleAuxiliaryBar" },
{ "key": "ctrl+shift+f11",        "command": "workbench.action.customizeLayout" },

// Markdown All in One Exception - limit ctrl+b shortcut to only when text is selected
{ "key": "ctrl+b",                "command": "-markdown.extension.editing.toggleBold",
                                     "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/" },
{ "key": "ctrl+b",                "command": "markdown.extension.editing.toggleBold",
                                     "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && editorHasSelection" },

{ "key": "f2",                    "command": "workbench.action.terminal.rename",
                                     "when": "terminalFocus" },
{ "key": "ctrl+; tab",            "command": "type",
                                     "args": { "text": "\t" },
                                     "when": "editorTextFocus" },
{ "key": "ctrl+; space",          "command": "my-cheatsheet.showCheatsheetToSide" },
{ "key": "ctrl+alt+k",            "command": "-rest-client.cancel-request",
                                     "when": "editorTextFocus && editorLangId == 'plaintext'" },

//////////////////////////////////////// Local Workstation Keybindings

]
