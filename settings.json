{
    // #region UI Theme
    "workbench.colorTheme": "Quiet Light", // Default to "Quiet Light", may be changed by Settings-on-fire
    "workbench.colorCustomizations": {
        "[Quiet Light]": {
            // Make debug console easier to read
            "debugConsole.infoForeground": "#4e4e4e", // Override default light-theme value of #75beff
            "debugConsole.sourceForeground": "#5eb2fc", // Override default light-theme value of #616161
            // Highlight the selected activity bar item 
            "activityBar.activeBackground": "#9900ff20", // Override default light-theme value of null
            // Make borders between editors and other sections easier to see
            "editorGroup.border": "#d3d3d3", // Override default light-theme value of "#e7e7e7"
            "editorOverviewRuler.border": "#dddddd", // Override default light-theme value of "#7f7f7f4d"
            "sideBar.border": "#d3d3d3", // Override default light-theme value of null
            "panel.border": "#d3d3d3", // override Quiet Light value of #f5f5f5

            // Make text on diff editor deleted lines easier to read by lightening the background
            // "diffEditor.insertedTextBackground": "#9bb95522", // Default: "#9bb95533", 
            "diffEditor.removedTextBackground": "#ff000022", // Default: "#ff000033",

            // Titlebar and status bar (compare and borrow from the default for light themes, Light+, QuietLight, and QuietLightForVsc(extension))
            // 1. Change titlebar from purple to gray
            // 2. Use different colors for status bar for normal workspaces, unsaved workspaces and when debugging (similar to other themes)
            // 3. Change status bar colors for error and remote
            //                                                 light-theme  Light+    QuietLight  QuietLightForVsc
            "titleBar.activeBackground": "#dddddd",      //  [#dddddd]               #c4b7d7      #c4b7d7
            "statusBar.background": "#4b83cd",           //   #007acc                #705697     [#4b83cd]
            "statusBar.noFolderBackground": "#705697",   //   #68217a               [#705697]     #aa3731
            "statusBar.debuggingBackground": "#cc6633",  //  [#cc6633]               #705697      #aa3731
            "statusBarItem.errorBackground": "#c72e0f",  //   #611708     [#c72e0f]  #c72516      #3d0000
            "statusBarItem.remoteBackground": "#16825d", //   #007acc     [#16825d]  #4e3c69      #448c27

            // Color of filenames with warnings (differentiate from color of modified files "#e2c08d")
            "list.warningForeground": "#b79600", // Light Default = "#855f00", Dark Default = "#cca700"

            // Modify Editor Inlay Hint colors to make less obtrusive
            // Base on Light+ colors rather than QuietLight, as they are easier on the eyes
            "editorInlayHint.background": "#c4c4c410", // Light+ Default: "#c4c4c44d", Quiet Light default: "#70569733"
            "editorInlayHint.foreground": "#3333336c", // Light+ Default: "#333333cc", Quiet Light default: "#333333cc"
            "editorInlayHint.parameterBackground": "#c4c4c420", // Light+ Default: "#c4c4c44d", Quiet Light default: "#70569733"
            "editorInlayHint.parameterForeground": "#3333336c", // Light+ Default: "#333333cc", Quiet Light default: "#333333cc"
            "editorInlayHint.typeBackground": "#c4c4c420", // Light+ Default: "#c4c4c44d", Quiet Light default: "#70569733"
            "editorInlayHint.typeForeground": "#3333336c", // Light+ Default: "#333333cc", Quiet Light default: "#333333cc"
        }
    },
    "editor.tokenColorCustomizations": {
        "[Quiet Light]": {
            // Make comments slightly darker
            "comments": "#A2A2A2" // Default: #AAAAAA
        }

    },
    // Quiet Light headers
    "markdown-color-plus.setextL1StyleHeader.style.text.enabled": true,
    "markdown-color-plus.setextL2StyleHeader.style.text.enabled": true,
    "markdown-color-plus.setextL1StyleHeader.style.text.lightThemeColor": "#AA3731",
    "markdown-color-plus.setextL2StyleHeader.style.text.lightThemeColor": "#AA3731",

    "workbench.iconTheme": "vscode-icons",
    // #endregion

    // #region UI Settings
    "window.title": "${rootName}${separator}${dirty}${activeEditorShort}",  // Default: "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}"
    "window.titleBarStyle": "custom",
    "window.customTitleBarVisibility": "windowed",
    "window.commandCenter": false,
    "window.menuBarVisibility": "hidden",
    "workbench.activityBar.location": "top",
    "editor.minimap.enabled": false,
    "workbench.tree.indent": 20,
    "workbench.startupEditor": "newUntitledFile",
    "workbench.editor.languageDetection": false,
    "workbench.editor.preferHistoryBasedLanguageDetection": true,
    "workbench.editor.empty.hint": "hidden",
    "workbench.editor.revealIfOpen": true,
    "debug.console.wordWrap": false, // Default to false, may be changed by Settings-on-fire
    "debug.console.collapseIdenticalLines": false, // Default to false, may be changed by Settings-on-fire
    "debug.console.acceptSuggestionOnEnter": "on",
    "debug.internalConsoleOptions": "openOnSessionStart",
    "git.enableStatusBarSync": false,
    "screencastMode.onlyKeyboardShortcuts": true,
    "liveshare.showInStatusBar": "whileCollaborating",
    "workbench.editor.autoLockGroups": {
        "workbench.editorinputs.searchEditorInput": true,
        "workbench.input.interactive": true,
        "mainThreadWebview-markdown.preview": true
    },
    "workbench.layoutControl.enabled": false,
    // #endregion

    // #region Editor Settings
    "editor.linkedEditing": true, // Depending on the language, related symbols, e.g. HTML tags, are updated while editing.
    "editor.copyWithSyntaxHighlighting": false,
    "editor.emptySelectionClipboard": false,
    "files.insertFinalNewline": true, // Default to true, may be changed by Settings-on-fire
    "editor.comments.ignoreEmptyLines": false,
    "explorer.autoReveal": false,
    "files.associations": {
        "*.md.txt": "markdown",
    },
    "workbench.editorAssociations": {
        "git-rebase-todo": "default"
    },
    "diffEditor.renderSideBySideInlineBreakpoint": 500,
    // #endregion

    // #region Terminal Settings
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "terminal.integrated.profiles.windows": {
        "Git Bash": {
             "source": "Git Bash",
             "icon": "terminal-bash"
         }
     },
     // "terminal.integrated.cwd": "${fileDirname}", // Open to directory of current file - broken in multi-root workspaces (#136099).  Use Tyriar.vscode-terminal-here as workaround
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.view.explorer",
        "workbench.files.action.showActiveFileInExplorer",
        "workbench.action.quickOpenTerm",
        "workbench.action.toggleAuxiliaryBar",
        "workbench.action.customizeLayout",
        "workbench.action.terminal.rename",

        "baincd.mini-command-palettes.cmds.activity-bar-palette",
        "baincd.mini-command-palettes.cmds.panel-palette",
        "baincd.mini-command-palettes.cmds.java-dev",
        "baincd.mini-command-palettes.cmds.diff-palette",
        "baincd.mini-command-palettes.cmds.git-palette",
        "workbench.action.debug.selectandstart",
    ],
    // #endregion

    // #region Debugging Settings
    "debug.autoExpandLazyVariables": true,
    // #endregion

    // #region Misc Extensions Settings
    "mycheatsheet.extension.globalcheatsheetDirectory": ".config/Code/User/cheatsheets",    // Linux: .config/Code/User/cheatsheets; Windows: AppData/Roaming/Code/User/cheatsheets; macOS: Library/Application Support/Code/User/cheatsheets;
    "cSpell.enableFiletypes": [
        "git-rebase",
        "shellscript"
    ],
    "coverage-gutters.showLineCoverage": true,
    "filterlines.createNewTab": false,
    // #region gitlens settings
    "gitlens.advanced.fileHistoryFollowsRenames": true,
    "gitlens.codeLens.scopes": [
        "document",
        "containers",
        "blocks" // Add start of functions, methods, etc
    ],
    "gitlens.keymap": "none",
    "gitlens.menus": {
        "editorGroup": {
            "compare": false // Remove the "Open Changes with Previous Revision", "Show Revision Commit", "Open Changes with Next Revision" buttons in editor group
        },
    },
    "gitlens.plusFeatures.enabled": false,
    // #endregion gitlens settings
    "overtype.perEditor": true,
    "print.browserPath": "/usr/bin/google-chrome-stable --incognito",
    "print.lineNumbers": "off",
    "pdf-preview.default.cursor": "hand",
    "vsicons.dontShowNewVersionMessage": true,
    "xml.format.maxLineWidth": 0,

    "custom-auto-fold.rules": [
        {
            "fileGlob": "**/{*.java,*.class}",
            "linePattern": "^import\\s",
            "firstMatchOnly": true
        },
        {
            "fileGlob": "**/*.class",
            "linePattern": "^(\\/| )\\*\\s.*[Cc](opyright|OPYRIGHT)",
            "firstMatchOnly": true
        }
    ],

    "highlight.regexes": {
        "~~DISABLE DEFAULT HIGHLIGHT REGEXES~~": {}
    },
    // #endregion

    // #region Todo Tree Extension Settings
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+\\.)[ \\t]|\\*\\*)[ \\t]*($TAGS)", // Add **, Fixes to default (Whitespace in pattern does not match newlines, escape '.', require whitespace after bullet/number in md lists)
    "todo-tree.general.tags": [
        "​CDB-REVIEWED", "CDBR>", "CDB-RVW>", // Added
        "​CDB-REVIEW", "CDBR", "CDB-RVW", // Added
        "​Qs", "??", "Q: ", // Added
        "​conflict", "<<<<<<<", // Added
        "​DEBUGGING", "System.out.println", "System.out.print", "System.err.println", "System.err.print", "log.debug(\"CDB ", "log.info(\"CDB ", "log.warn(\"CDB ", "console.log","debugger", // Added
        "CDB", "FIXME CDB", "TODO CDB", // Added
        "NEED", // Added
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "NEED",
        "[]", // Added
        "[ ]", // Todo-Tree Markdown Fix https://github.com/Gruntfuggly/todo-tree#markdown-support
        "[x]", // Todo-Tree Markdown Fix https://github.com/Gruntfuggly/todo-tree#markdown-support
        "[>]", // Added
        "[>>]", // Added
    ],
    "todo-tree.general.tagGroups": {
        "[ ]": [ "[ ]", "[]" ],
        "CDB": [ "CDB", "FIXME CDB", "TODO CDB" ],
        "​CDB-REVIEWED" : [ "CDBR>", "CDB-RVW>", ],
        "​CDB-REVIEW": [ "CDBR", "CDB-RVW" ],
        "​Qs": [ "??", "Q:" ],
        "​conflict": ["<<<<<<<"],
        "​DEBUGGING": ["System.out.println", "System.out.print", "System.err.println", "System.err.print", "log.debug(\"CDB ", "log.info(\"CDB ", "log.warn(\"CDB ", "console.log","debugger", ]
    },
    "todo-tree.highlights.defaultHighlight": {
        "foreground": "#FFFFFF",
        "background": "#FF5454",
        "iconColour": "#FF5454"
    },
    "todo-tree.highlights.customHighlight": {
        "CDB": { "icon": "bell", "background": "#A80000", "iconColour": "#A80000" },
        "​CDB-REVIEWED": { "icon": "code-review", "iconColour": "#e80000", "background": "#e80000", "foreground": "#F0F0F0" },
        "​CDB-REVIEW": { "icon": "code-review", "iconColour": "#D4AC0D", "background": "#F7DC6F", "foreground": "#424949" },
        "​Qs": { "icon": "question", "background": "#9900ff", "iconColour": "#9900ff" },
        "​conflict": { "icon": "git-pull-request", "background": "#ff7f00", "iconColour": "#ff7f01" },
        "​DEBUGGING": { "icon": "trash" },
        "NEED": { "icon": "issue-opened" },
        "[x]": { "background": "#00CC0080", "icon": "check-circle-fill", "iconColour": "#00CC00" },
        "[>]": { "background": "#ebb800", "icon": "chevron-right", "iconColour": "#ebb800" },
        "[>>]": { "background": "#8b0000", "icon": "arrow-right", "iconColour": "#8b0000" },
    },
    "todo-tree.general.statusBar": "tags",
    "todo-tree.tree.labelFormat": "${filename}:${line} [${tag}] ${after}",
    "todo-tree.filtering.useBuiltInExcludes": "file and search excludes",
    // #endregion

    // #region SettingsOnFire Extension Settings
    "settingsOnFire.toggle": {
        "Theme": {
            "on": {  "_label": "light", "workbench.colorTheme": "Default Dark+" },
            "off": { "_label": "dark",  "workbench.colorTheme": "Quiet Light"   }
        },
        "Git Code Lens": {
            "on": {  "_label": "enabled",  "gitlens.codeLens.enabled": false },
            "off": { "_label": "disabled", "gitlens.codeLens.enabled": true  }
        },
        "Java Code Lens": {
            "on": {  "_label": "enabled",  "java.referencesCodeLens.enabled": false,
                                           "java.implementationsCodeLens.enabled": false},
            "off": { "_label": "disabled", "java.referencesCodeLens.enabled": true, 
                                           "java.implementationsCodeLens.enabled": true},
        },
        "Editor Code Lens": {
            "on": {  "_label": "enabled",  "editor.codeLens": false },
            "off": { "_label": "disabled", "editor.codeLens": true  },
        },
        "Diff Editor Code Lens": {
            "on": {  "_label": "disabled", "diffEditor.codeLens": true },
            "off": { "_label": "enabled", "diffEditor.codeLens": false },
        },
        "Java Automatic Build": {
            "on": {  "_label": "on",    "java.autobuild.enabled": false, },
            "off": { "_label": "🔴off", "java.autobuild.enabled": true,  }
        },
        "Editor Hovers": {
            "on": {  "_label": "on",  "editor.hover.enabled": false, },
            "off": { "_label": "🔴off", "editor.hover.enabled": true, }
        },
        "Git Lens Hovers": {
            "on": {  "_label": "off",  "gitlens.hovers.enabled": true, },
            "off": { "_label": "🟢on", "gitlens.hovers.enabled": false, }
        },
        "Screenshot Mode": {
            "on": {  "_label": "off",  "breadcrumbs.enabled": false, "editor.renderLineHighlight": "none", "markdown-color-plus.currentHeaders.background.enabled": false, "cSpell.enabled": false, "editor.hover.enabled": false, "todo-tree.highlights.enabled": false, "errorLens.enabled": false, },
            "off": { "_label": "🟢on", "breadcrumbs.enabled": true,  "editor.renderLineHighlight": "line", "markdown-color-plus.currentHeaders.background.enabled": true,  "cSpell.enabled": true,  "editor.hover.enabled": true,  "todo-tree.highlights.enabled": true,  "errorLens.enabled": true,  }
        },
        "Todo Highlighting": {
            "on": {  "_label": "on",    "todo-tree.highlights.enabled": false, },
            "off": { "_label": "🔴off", "todo-tree.highlights.enabled": true,  }
        },
        "Error Lens": {
            "on": {  "_label": "on",    "errorLens.enabled": false, },
            "off": { "_label": "🔴off", "errorLens.enabled": true,  }
        },
        "Spelling Errors Severity": {
            "on": {  "_label": "info",   "cSpell.diagnosticLevel": "Hint",        },
            "off": { "_label": "🔴hint", "cSpell.diagnosticLevel": "Information", }
        },
        "Insert EOF New Line": {
            "on": {  "_label": "on",    "files.insertFinalNewline": false  },
            "off": { "_label": "🔴off", "files.insertFinalNewline": true   }
        },
    },
    // Settings that are not changed from the default, but may be toggled by Settings-on-fire
    "gitlens.codeLens.enabled": true,
    "editor.codeLens": true,
    "diffEditor.codeLens": false,
    "java.autobuild.enabled": true,
    "cSpell.diagnosticLevel": "Information",
    "editor.hover.enabled": true,
    "gitlens.hovers.enabled": false,
    "breadcrumbs.enabled": true,
    "todo-tree.highlights.enabled": true,
    "errorLens.enabled": true,
    "editor.renderLineHighlight": "line",
    "markdown-color-plus.currentHeaders.background.enabled": true,
    "cSpell.enabled": true,
    // #endregion SettingsOnFire

    // #region Insert Unicode Extension Settings
    "insert-unicode.favorites": {
        "directories": {
            "1-Symbols": {
                "directories": {},
                "items": [[8253],[8226],[183],[176],[162],[9251]]
            },
            "2-Whitespace": {
                "directories": {},
                "items": [[9],[160],[8203]]
            },
            "3-Arrows": {
                "directories": {},
                "items": [[8592],[8594],[8596],[8656],[8658],[8660],[171],[187]]
            },
            "4-Checkmarks": {
                "directories": {},
                "items": [[10003],[10004],[10007],[10008],[10060],[9744],[9745],[9746]]
            },
            "5-Math Symbols": {
                "directories": {},
                "items": [[188],[189],[190],[8531],[8532],[177],[215],[247],[8804],[8805],[8776],[8800]]
            },
            "6-Emoji Smiles 🙂": {
                "directories": {},
                "items": [[9786,65039],[128578],[128521],[128513],[128522],[128512],[128515],[128516],[128518],[128514],[129315],[128537],[128536],[128139],]
            },
            "7-Emoji Symbols 👍": {
                "directories": {},
                "items": [[128077],[128079],[128075],[129303],[10084,65039]]
            },
            "8-Emoji Silly 😎": {
                "directories": {},
                "items": [[128526],[129299],[128579],[128540],[129322]]
            },
            "9-Emoji Unhappy 🙁": {
                "directories": {},
                "items": [[9785,65039],[128577],[128533],[128528],[128580],[129300],[128559],[128563]]
            }
        },
        "items": []
    },
    // #endregion

    // #region Commands Extension Settings
    "commands.commands": {
        "commands.custom.format-json-doc": {
            "sequence": [
                { "command": "commands.setEditorLanguage",
                     "args": "json" },
                {   "delay": 100,
                    "command": "editor.action.formatDocument" },
                {   "command": "cursorTop" }
            ]
        },
        "commands.custom.fold-doc": {
            "sequence": [
                { "command": "cursorTop" },
                { "command": "editor.foldRecursively" },
                { "command": "cursorMove", // "command": "editor.unfold" doesn't work
                     "args": {
                        "to": "down",
                        "by": "line",
                        "value": 1
                    }
                }
            ]
        },
        "commands.custom.showActiveFileInExplorer": {
            "sequence": [
                { "command": "commands.toggleSetting",
                     "args": { "setting": "explorer.autoReveal", "value": [true] }},
                { "command": "workbench.view.search" }, // If the explorer view was already open this doesn't work, so move to a different view first
                { "command": "workbench.explorer.fileView.focus" },
                { "command": "commands.toggleSetting",
                     "args": { "setting": "explorer.autoReveal", "value": [false] }
                }
            ]
        }
    },
    // #endregion

    // #region Mini Command Palette Extension Sections
    "baincd.mini-command-palettes.paletteConfigs": {
        "activity-bar-palette": {
            "placeHolder": "Activity Bar",
            "commands": [
                {
                    "label": "$(explorer-view-icon) Show Explorer",
                    "description": "     (Ctrl+Shift+E)",
                    "command": "workbench.view.explorer"
                },
                {
                    "label": "$(search-view-icon) Show Search",
                    "description": "     (Ctrl+Shift+F)",
                    "command": "workbench.action.findInFiles" // or workbench.view.search
                },
                {
                    "label": "$(source-control-view-icon) Show Git (Source Control)",
                    "description": "     (Ctrl+Shift+G)",
                    "command": "workbench.view.scm"
                },
                {
                    "label": "$(run-view-icon) Show Run and Debug",
                    "description": "     (Ctrl+Shift+D)",
                    "command": "workbench.view.debug"
                },
                {
                    "label": "$(extensions-view-icon) Show Extensions",
                    "description": "     (Ctrl+Shift+X)",
                    "command": "workbench.view.extensions"
                },
                {
                    "label": "$(test-view-icon) Show Testing",
                    "command": "workbench.view.extension.test"
                },
                {
                    "label": "$(references) Show References",
                    "command": "workbench.view.extension.references-view"
                },
                {
                    "label": "$(pass) Show Todos",
                    "command": "workbench.view.extension.todo-tree-container",
                    "showWhen": {
                        "extensionEnabled": "Gruntfuggly.todo-tree"
                    }
                },
                {
                    "label": "$(live-share) Live Share",
                    "command": "workbench.view.extension.liveshare",
                    "showWhen": {
                        "extensionEnabled": "MS-vsliveshare.vsliveshare"
                    }
                },
                {
                    "label": "$(kebab-vertical) Toggle Activity Bar",
                    "command": "workbench.action.toggleActivityBarVisibility"
                },
                {
                    "label": "$(preview) Toggle Sidebar",
                    "description": "     (Ctrl+B)",
                    "command": "workbench.action.toggleSidebarVisibility"
                },
            ]
        },
        "panel-palette": {
            "placeHolder": "Panel",
            "commands": [
                {
                    "label": "$(error) Show Problems",
                    "description": "     (Ctrl+Shift+M)",
                    "command": "workbench.actions.view.problems"
                },
                {
                    "label": "$(output-view-icon) Show Output",
                    "description": "     (Ctrl+K Ctrl+H)",
                    "command": "workbench.action.output.toggleOutput"
                },
                {
                    "label": "$(terminal-view-icon) Show Terminal",
                    "description": "     (Ctrl+`)",
                    "command": "workbench.action.quickOpenTerm" // or workbench.action.terminal.toggleTerminal
                },
                {
                    "label": "$(debug-console) Show Debug Console",
                    "description": "     (Ctrl+Shift+Y)",
                    "command": "workbench.debug.action.toggleRepl"
                },
                {
                    "label": "$(chevron-up) Toggle Panel",
                    "description": "     (Ctrl+J)",
                    "command": "workbench.action.togglePanel"
                },
            ]
        },
        "dev-palette":{
            "placeHolder": "dev",
            "commands": [
                {
                    "label": "$(debug-rerun) Rerun Last Test",
                    "description": "     (Ctrl+; L)",
                    "command": "testing.reRunLastRun",
                },
                {
                    "label": "⇅  Organize Imports",
                    "description": "     (Shift+Alt+O)",
                    "command": "editor.action.organizeImports"
                },
                {
                    "label": "$(tools) Source Action...",
                    "command": "editor.action.sourceAction"
                },
                {
                    "label": "$(wand) Refactor...",
                    "description": "     (Ctrl+Shift+R)",
                    "command": "editor.action.refactor"
                },
                {
                    "label": "$(play) Maven: Favorites...",
                    "description": "Java",
                    "command": "maven.favorites",
                    "showWhen": {
                        "extensionEnabled": "vscjava.vscode-maven"
                    }
                },
                {
                    "label": "$(symbol-event) Build Workspace",
                    "description": "java",
                    "command": "java.project.build.workspace",
                    "showWhen": {
                        "extensionEnabled": "vscjava.vscode-java-dependency"
                    }
                },
                {
                    "label": "$(close) Clean Java Language Server Workspace",
                    "description": "java",
                    "command": "java.clean.workspace",
                    "commandArgs": [true],
                    "showWhen": {
                        "extensionEnabled": "redhat.java"
                    }
                },
                {
                    "label": "$(circuit-board) Delombok",
                    "description": "java",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "Java: delombok file"
                    ],
                    "showWhen": {
                        "extensionEnabled": "redhat.java"
                    }
                }
            ]
        },
        "dev-view-palette": {
            "placeHolder": "Peek, Find, or Goto",
            "commands": [
                {
                    "label": "$(book)$(eye) Definition - Peek",
                    "description": "     (Ctrl+Shift+F10)",
                    "command": "editor.action.peekDefinition"
                },
                {
                    "label": "$(book)$(search) Definition - Find",
                    "description": "     (Ctrl+K F12)",
                    "command": "editor.action.revealDefinitionAside"
                },
                {
                    "label": "$(book)$(arrow-right) Definition - Goto",
                    "description": "     (F12)",
                    "command": "editor.action.revealDefinition"
                },
                {
                    "label": "$(mortar-board)$(eye) TypeDefinition - Peek",
                    "command": "editor.action.peekTypeDefinition"
                },
                {
                    "label": "$(mortar-board)$(arrow-right) TypeDefinition - Goto",
                    "command": "editor.action.goToTypeDefinition"
                },
                {
                    "label": "$(file-code)$(eye) Implementations - Peek",
                    "description": "     (Ctrl+Shift+F12)",
                    "command": "editor.action.peekImplementation"
                },
                {
                    "label": "$(file-code)$(search) Implementations - Find All",
                    "command": "references-view.findImplementations"
                },
                {
                    "label": "$(file-code)$(arrow-right) Implementations - Goto",
                    "description": "     (Ctrl+F12)",
                    "command": "editor.action.goToImplementation"
                },
                {
                    "label": "$(type-hierarchy-super)$(arrow-right) Super-Implementation - Goto",
                    "description": "java",
                    "command": "java.action.navigateToSuperImplementation",
                    "showWhen": {
                        "extensionEnabled": "redhat.java"
                    }
                },
                {
                    "label": "$(references)$(eye) References - Peek",
                    "command": "editor.action.referenceSearch.trigger"
                },
                {
                    "label": "$(references)$(search) References - Find All",
                    "description": "     (Alt+Shift+F12)",
                    "command": "references-view.findReferences"
                },
                {
                    "label": "$(references)$(arrow-right) References - Goto",
                    "description": "     (Shift+F12)",
                    "command": "editor.action.goToReferences"
                },
                {
                    "label": "$(call-incoming)$(eye) Call Hierarchy - Peek",
                    "command": "editor.showCallHierarchy"
                },
                {
                    "label": "$(call-incoming)$(search) Call Hierarchy - Show",
                    "description": "     (Alt+Shift+H)",
                    "command": "references-view.showCallHierarchy"
                },
                {
                    "label": "$(type-hierarchy)$(search) Type Hierarchy - Show",
                    "description": "java",
                    "command": "java.action.showTypeHierarchy",
                    "showWhen": {
                        "extensionEnabled": "redhat.java"
                    }
                },
            ]
        },
        "diff-palette": {
            "placeHolder": "Diff",
            "commands": [
                {
                    "label": "+  Stage Selected Changes",
                    "description": "     (Ctrl+K Ctrl+Alt+S)",
                    "command": "git.stageSelectedRanges"
                },
                {
                    "label": "⧺  Stage File",
                    "command": "git.stage"
                },
                {
                    "label": "−  Unstage Selected Changes",
                    "description": "     (Ctrl+K Ctrl+N)",
                    "command": "git.unstageSelectedRanges"
                },
                {
                    "label": "±  Open Diff (Working Copy)",
                    "command": "git.openChange"
                },
                {
                    "label": "$(go-to-file) Open File",
                    "command": "git.openFile"
                },
                {
                    "label": "$(diff) Toggle Inline / Side-By-Side",
                    "command": "toggle.diff.renderSideBySide"
                },
                {
                    "label": "␢  Toggle Show / Hide Whitespace Differences",
                    "command": "toggle.diff.ignoreTrimWhitespace"
                },
            ]
        },
        "git-palette": {
            "placeHolder": "Git",
            "matchOnDescription": true,
            "commands": [
                {
                    "label": "$(git-commit) Commit",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git commit"
                    ]
                },
                {
                    "label": "$(git-commit) Commit All",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git commit-all"
                    ]
                },
                {
                    "label": "$(git-commit) Commit Amend",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git commit-amend"
                    ]
                },
                {
                    "label": "$(window) Commit GUI",
                    "description": "git gui",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git commit-gui"
                    ]
                },
                {
                    "label": "$(window) Log GUI",
                    "description": "gitk",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git log-gui"
                    ]
                },
                {
                    "label": "$(window) Log GUI (file) ",
                    "description": "gitk ${file}",
                    "command": "workbench.action.tasks.runTask",
                    "commandArgs": [
                        "git log-gui(file)"
                    ]
                },
                {
                    "label": "$(globe) Open repo on remote",
                    "command": "gitlens.openRepoOnRemote",
                    "showWhen": {
                        "extensionEnabled": "eamodio.gitlens"
                    }
                },
            ]
        }
    },
    // #endregion

    // #region Markdown Settings
    "markdown.preview.doubleClickToSwitchToEditor": false,
    "markdown.preview.markEditorSelection": false,
    "markdown.extension.theming.decoration.renderCodeSpan": false,
    "markdown.extension.theming.decoration.renderHardLineBreak": false,
    "markdown.extension.theming.decoration.renderLink": false,
    "markdown.extension.theming.decoration.renderParagraph": false,
    "markdown.extension.theming.decoration.renderStrikethrough": false,
    "markdown.extension.theming.decoration.renderTrailingSpace": false,
    "markdown.extension.list.indentationSize": "inherit",
    "markdown.extension.tableFormatter.enabled": false,
    "markdown-table-formatter.enableSort": false,
    "[markdown]": {
        "editor.tabSize": 2
    },
    // #endregion Markdown Settings

    // #region Java settings
    // #region Java Setup Examples
    // ## Java Runtimes setup
    //   "java.configuration.runtimes": [ // JDKs available to build/run code
    //     {
    //       "name": "JavaSE-1.8",
    //       "path": "c:\\path\\to\\jdk"
    //     }
    //   ],
    //
    // ## Jacoco setup
    //   // Requires jacoco-agent jar to be setup.  Also requires jacoco report to be run after tests (See https://github.com/microsoft/vscode-java-test/issues/387#issuecomment-1126769444 for more info)
    //   "java.test.config": [
    //       {
    //           "name": "jacoco",
    //           "vmargs": ["-javaagent:/home/chris/.vscode/lombok-1.18.24.jar/org.jacoco.agent-0.8.8-runtime.jar=destfile=target/jacoco.exec,append=false"],
    //           "postDebugTask": "Jacoco Report" // Create Task for Jacoco Report
    //       }
    //   ],
    //   "java.test.defaultConfig": "jacoco",
    // #endregion Java Setup Examples
    "java.configuration.updateBuildConfiguration": "automatic",
    "java.debug.settings.console": "internalConsole",
    "java.referencesCodeLens.enabled": true, // Default to true, may be changed by Settings-on-fire
    "java.implementationsCodeLens.enabled": true, // Default to true, may be changed by Settings-on-fire
    "java.compile.nullAnalysis.mode": "automatic",
    "java.test.report.showAfterExecution": "always",
    "java.completion.favoriteStaticMembers": [
        "java.text.MessageFormat.*", // Added

        "org.assertj.core.api.Assertions.*", // Added
        "org.hamcrest.Matchers.*", // Added
        "org.junit.Assert.*",
        "org.junit.Assume.*",
        "org.junit.jupiter.api.Assertions.*",
        "org.junit.jupiter.api.Assumptions.*",
        "org.junit.jupiter.api.DynamicContainer.*",
        "org.junit.jupiter.api.DynamicTest.*",
        "org.mockito.Mockito.*",
        "org.mockito.ArgumentMatchers.*",
        "org.mockito.Answers.*"
    ],
    "java.completion.filteredTypes": [
        "java.awt.*",
        "com.sun.*",
        "sun.*",
        "jdk.*",
        "org.graalvm.*",
        "io.micrometer.shaded.*",

        "io.micrometer.core.instrument.util.StringUtils", // Added
        "org.springframework.util.StringUtils", // Added
        "org.springframework.util.ObjectUtils", // Added
        "org.apache.tomcat.*", // Added
        "lombok.var", // Added (no longer nec. in Java 10+)
        "lombok.experimental.var", // Added (no longer nec. in Java 10+)
    ],
    "java.inlayHints.parameterNames.exclusions": [
        "org.slf4j.LoggerFactory.getLogger(clazz)",
        "java.text.MessageFormat.format(pattern,arguments)",
        "java.io.PrintStream.print*(x)",
        "java.util.List.get(index)",
        "java.util.Arrays.asList(a)",
        "org.slf4j.Logger.*(msg)",
        "(expected*)",
        "(key)"
    ],
    "java.debug.settings.stepping.skipClasses": [
        "$JDK",
        // "$Libraries",
        "java.lang.ClassLoader",
        "org.springframework.aop.*",
        "org.springframework.cglib.*",
        "org.springframework.util.ClassUtils",
        "org.springframework.core.BridgeMethodResolver",
        "java.lang.reflect.*",
        "java.lang.instrument.*",
        "java.lang.*"
    ],

    // Maven Settings
    "java.import.gradle.enabled": false,
    "java.maven.downloadSources": true,
    "maven.terminal.favorites": [
        { "alias": "gen build dependency tree", "command": "dependency:tree -Dverbose -DoutputFile=maven-build-dependencies io.github.floverfelt:find-and-replace-maven-plugin:1.0:find-and-replace \"-DfindRegex=(\\\\+-|\\| |\\\\\\-)\" \"-DreplaceValue=  \" -DreplacementType=file-contents -DfileMask=maven-build-dependencies" },
        { "alias": "gen plugin dependency tree", "command": "dependency:resolve-plugins -Dverbose -DoutputFile=maven-plugin-dependencies" },
    ],
    "maven.view": "hierarchical",
    // #endregion Java Settings

    //////////////////////////////////////// Local Workstation Settings
    "update.mode": "default",
    "update.enableWindowsBackgroundUpdates": true,
    "diffEditor.renderSideBySide": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.hideUnchangedRegions.enabled": true,

}
